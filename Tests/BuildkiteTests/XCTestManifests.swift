#if !canImport(ObjectiveC)
import XCTest

extension AccessTokensTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AccessTokensTests = [
        ("testAccessTokenDelete", testAccessTokenDelete),
        ("testAccessTokenGet", testAccessTokenGet),
    ]
}

extension AgentsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AgentsTests = [
        ("testAgentsGet", testAgentsGet),
        ("testAgentsList", testAgentsList),
        ("testAgentsStop", testAgentsStop),
    ]
}

extension AnnotationsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnnotationsTests = [
        ("testAnnotationsList", testAnnotationsList),
    ]
}

extension ArtifactsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ArtifactsTests = [
        ("testArtifactsDelete", testArtifactsDelete),
        ("testArtifactsDownload", testArtifactsDownload),
        ("testArtifactsGet", testArtifactsGet),
        ("testArtifactsListByBuild", testArtifactsListByBuild),
        ("testArtifactsListByJob", testArtifactsListByJob),
    ]
}

extension BuildkiteTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BuildkiteTests = [
        ("testClosureBasedRequest", testClosureBasedRequest),
        ("testClosureBasedRequestInvalidResponse", testClosureBasedRequestInvalidResponse),
        ("testClosureBasedRequestNoContent", testClosureBasedRequestNoContent),
        ("testClosureBasedRequestUnsuccessfulResponse", testClosureBasedRequestUnsuccessfulResponse),
        ("testFailureFromTransport", testFailureFromTransport),
        ("testPublisherBasedRequest", testPublisherBasedRequest),
        ("testPublisherBasedRequestInvalidResponse", testPublisherBasedRequestInvalidResponse),
        ("testPublisherBasedRequestNoContent", testPublisherBasedRequestNoContent),
        ("testPublisherBasedRequestUnsuccessfulResponse", testPublisherBasedRequestUnsuccessfulResponse),
    ]
}

extension BuildsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BuildsTests = [
        ("testBuildsCancel", testBuildsCancel),
        ("testBuildsCreate", testBuildsCreate),
        ("testBuildsGet", testBuildsGet),
        ("testBuildsListAllDefaultQuery", testBuildsListAllDefaultQuery),
        ("testBuildsListAllSpecializedQuery", testBuildsListAllSpecializedQuery),
        ("testBuildsListForOrganization", testBuildsListForOrganization),
        ("testBuildsListForPipeline", testBuildsListForPipeline),
        ("testBuildsRebuild", testBuildsRebuild),
    ]
}

extension EmojisTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EmojisTests = [
        ("testEmojisList", testEmojisList),
    ]
}

extension JobsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JobsTests = [
        ("testJobsDeleteLogOutput", testJobsDeleteLogOutput),
        ("testJobsEnvironmentVariables", testJobsEnvironmentVariables),
        ("testJobsLogOutput", testJobsLogOutput),
        ("testJobsRetry", testJobsRetry),
        ("testJobsUnblock", testJobsUnblock),
    ]
}

extension OrganizationsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__OrganizationsTests = [
        ("testOrganizationsGet", testOrganizationsGet),
        ("testOrganizationsList", testOrganizationsList),
    ]
}

extension PipelinesTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PipelinesTests = [
        ("testPipelinesCreate", testPipelinesCreate),
        ("testPipelinesDelete", testPipelinesDelete),
        ("testPipelinesGet", testPipelinesGet),
        ("testPipelinesList", testPipelinesList),
        ("testPipelinesUpdate", testPipelinesUpdate),
    ]
}

extension StatusCodeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StatusCodeTests = [
        ("testFlag", testFlag),
    ]
}

extension TransportTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TransportTests = [
        ("testURLSessionSendClosureBasedRequest", testURLSessionSendClosureBasedRequest),
        ("testURLSessionSendClosureBasedRequestFailure", testURLSessionSendClosureBasedRequestFailure),
        ("testURLSessionSendPublisherBasedRequest", testURLSessionSendPublisherBasedRequest),
        ("testURLSessionSendPublisherBasedRequestFailure", testURLSessionSendPublisherBasedRequestFailure),
    ]
}

extension UsersTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UsersTests = [
        ("testUserMe", testUserMe),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AccessTokensTests.__allTests__AccessTokensTests),
        testCase(AgentsTests.__allTests__AgentsTests),
        testCase(AnnotationsTests.__allTests__AnnotationsTests),
        testCase(ArtifactsTests.__allTests__ArtifactsTests),
        testCase(BuildkiteTests.__allTests__BuildkiteTests),
        testCase(BuildsTests.__allTests__BuildsTests),
        testCase(EmojisTests.__allTests__EmojisTests),
        testCase(JobsTests.__allTests__JobsTests),
        testCase(OrganizationsTests.__allTests__OrganizationsTests),
        testCase(PipelinesTests.__allTests__PipelinesTests),
        testCase(StatusCodeTests.__allTests__StatusCodeTests),
        testCase(TransportTests.__allTests__TransportTests),
        testCase(UsersTests.__allTests__UsersTests),
    ]
}
#endif
